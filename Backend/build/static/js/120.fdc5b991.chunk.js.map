{"version":3,"file":"static/js/120.fdc5b991.chunk.js","mappings":"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","sources":["views/settings/email/EmailList.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { GrEdit } from 'react-icons/gr'\nimport { Table } from 'antd'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Stack from '@mui/material/Stack'\nimport Pagination from '@mui/material/Pagination'\nimport { useNavigate } from 'react-router-dom'\nimport { MdOutlineEdit } from 'react-icons/md'\nimport { postFetchData } from 'src/Api'\nimport { RiDeleteBinLine } from 'react-icons/ri'\n\nconst EmailList = () => {\n  const navigate = useNavigate()\n  const [emailRecord, setEmailRecord] = useState([])\n  const apiUrl = process.env.REACT_APP_API_URL\n  const [page, setPage] = useState(1)\n  const [countPage, setCountPage] = useState(0)\n  const [itemsPerPage, setItemsPerPage] = useState('')\n  const handlePageChange = (event, value) => {\n    setPage(value)\n  }\n  const getDetails = async () => {\n    try {\n      const result = await fetch(\n        `${apiUrl}/email/get_email?page=${page}&resultPerPage=${itemsPerPage}`,\n      )\n      const data = await result.json()\n      setCountPage(data?.pageCount)\n      const activeRecords = data?.result?.filter((record) => record.is_deleted === 'active')\n      setEmailRecord(activeRecords)\n    } catch (error) {\n      console.error('Error fetching customer record:', error)\n    }\n  }\n  const handleItemsPerPageChange = (e) => {\n    setItemsPerPage(parseInt(e.target.value, 10))\n    setPage(1)\n  }\n  const handleEdit = (record) => {\n    let recordData = JSON.stringify(record)\n    localStorage.setItem('EmailEditDetails', recordData)\n    navigate(`/settings/email_info`)\n  }\n\n  useEffect(() => {\n    getDetails()\n  }, [page, itemsPerPage])\n  const columns = [\n    {\n      title: 'Name des Kunden',\n      dataIndex: 'designation',\n      render: (text) => <a>{text}</a>,\n      width: '100%',\n    },\n    {\n      title: 'AKTION',\n      dataIndex: 'action',\n      render: (text, record) => (\n        <>\n          <button style={{ background: 'none', border: 'none' }} onClick={() => handleEdit(record)}>\n            <MdOutlineEdit className=\"fs-5\" style={{ color: '#5C86B4' }} />\n            &nbsp;&nbsp;Bearbeiten\n          </button>\n          <button\n            style={{ background: 'none', border: 'none' }}\n            // onClick={() => handleDelete(record._id)}\n            disabled\n          >\n            <RiDeleteBinLine className=\"text-danger text-bold fs-5\" /> LÃ¶schen\n          </button>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <div className=\"inner-page-wrap\">\n      <div className=\"row tab-content\" style={{ borderRadius: '5px' }}>\n        <div\n          className=\"col-sm-12\"\n          style={{\n            background: 'white',\n            Height: '640px',\n            // width: '1210px',\n            borderRadius: '5px ',\n          }}\n        >\n          <div className=\"tab-title\">\n            <h4>E-Mail-Vorlagen</h4>\n          </div>\n          <div className=\"mx-2\">\n            <Table\n              columns={columns}\n              pagination={false}\n              dataSource={emailRecord}\n              rowKey={(record) => record._id}\n              rowSelection={{\n                type: 'checkbox',\n                onChange: (selectedRowKeys, selectedRows) => {\n                  // console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n                },\n                getCheckboxProps: (record) => ({\n                  disabled: record.name === 'Disabled User',\n                  name: record.name,\n                }),\n              }}\n            />\n            <div className=\"container-fluid pagination-row\">\n              <div className=\"row\">\n                <div className=\"col-md-10 ps-md-0 text-center text-md-start\">\n                  <Stack spacing={2}>\n                    <Pagination\n                      count={countPage}\n                      variant=\"outlined\"\n                      shape=\"rounded\"\n                      page={page}\n                      onChange={handlePageChange}\n                    />\n                  </Stack>\n                </div>\n                <div className=\"col-md-2 pe-md-0 mt-3 mt-md-0 text-md-end\">\n                  <select\n                    className=\"form-control form-select\"\n                    value={itemsPerPage}\n                    onChange={handleItemsPerPageChange}\n                  >\n                    <option value={10}>10 pro Seite</option>\n                    <option value={20}>20 pro Seite</option>\n                    <option value={50}>50 pro Seite</option>\n                    <option value={100}>100 pro Seite</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <br />\n          </div>\n        </div>\n        <ToastContainer />\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(EmailList)\n"],"names":["EmailList","navigate","useNavigate","emailRecord","setEmailRecord","useState","page","setPage","countPage","setCountPage","itemsPerPage","setItemsPerPage","useEffect","async","_data$result","result","fetch","concat","process","data","json","pageCount","activeRecords","filter","record","is_deleted","error","console","getDetails","columns","title","dataIndex","render","text","_jsx","children","width","_jsxs","_Fragment","style","background","border","onClick","recordData","JSON","stringify","localStorage","setItem","handleEdit","MdOutlineEdit","className","color","disabled","RiDeleteBinLine","borderRadius","Height","Table","pagination","dataSource","rowKey","_id","rowSelection","type","onChange","selectedRowKeys","selectedRows","getCheckboxProps","name","Stack","spacing","Pagination","count","variant","shape","handlePageChange","event","value","e","parseInt","target","ToastContainer","React"],"sourceRoot":""}