{"version":3,"file":"static/js/893.561f1779.chunk.js","mappings":"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","sources":["views/customer/Customer.jsx","views/customer/Date.jsx","views/customer/attorney/Attorney.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nconst Customer = ({ getCustomerData, updateData, updateStreet, updateLand }) => {\n  const [customerInfo, setCustomerInfo] = useState([])\n  let ress = localStorage.getItem('customerRecord')\n  let resultt = JSON.parse(ress)\n  const apiUrl = process.env.REACT_APP_API_URL\n  Customer.propTypes = {\n    getCustomerData: PropTypes.func.isRequired,\n    updateData: PropTypes.func.isRequired,\n    updateStreet: PropTypes.func.isRequired,\n    updateLand: PropTypes.func.isRequired,\n  }\n\n  const navigate = useNavigate()\n\n  let activeTab = localStorage.getItem('tabId') || 'customer_info'\n\n  const handleTabClick = (tabId, name, e) => {\n    if (e && e.target.tagName.toLowerCase() === 'a') {\n      e.preventDefault()\n    }\n    if (name === 'KlientInnen') {\n      localStorage.setItem('tabId', 'customer_info')\n      return navigate('/customer/customer_info')\n    } else if (name === 'Kontakte') {\n      localStorage.setItem('tabId', 'contact')\n      return navigate('/customer/contact')\n    } else if (name === 'Aktivität') {\n      localStorage.setItem('tabId', 'activity')\n      return navigate('/customer/activity')\n    } else if (name === 'Dokumente') {\n      localStorage.setItem('tabId', 'document')\n      return navigate('/customer/document')\n    } else if (name === 'Vollmachten') {\n      localStorage.setItem('tabId', 'attorney')\n      return navigate('/customer/attorney')\n    } else if (name === 'HVD-PV') {\n      localStorage.setItem('tabId', 'services')\n      return navigate('/customer/services')\n    } else if (name === 'Rechnung') {\n      localStorage.setItem('tabId', 'bills')\n      return navigate('/customer/bills')\n    }\n  }\n  useEffect(() => {\n    handleTabClick()\n  }, [activeTab])\n  console.log('customerInfo', customerInfo)\n  let customer = localStorage.getItem('customerRecord')\n  let res = JSON.parse(customer)\n  const dateString = customerInfo?.customer?.startDate\n  const date = new Date(dateString)\n\n  const options = { year: 'numeric', month: '2-digit', day: '2-digit' }\n  const formattedDate = date.toLocaleDateString('en-IN', options).replace(/\\//g, '.')\n\n  const firstName = customerInfo?.customer?.fname\n  const lastName =\n    customerInfo?.customer?.lname?.slice(0, 1).toUpperCase() +\n    customerInfo?.customer?.lname?.slice(1).toLowerCase()\n\n  let street =\n    (customerInfo?.customer?.street?.length > 1 ? customerInfo?.customer?.street + ',  ' : '') +\n    (customerInfo?.customer?.street\n      ? customerInfo?.customer?.plz + '  ' + customerInfo?.customer?.ort\n      : '')\n\n  let status = customerInfo?.customer?.status\n  const getRecordById = async () => {\n    const response = await fetch(`${apiUrl}/customer/get_record/${resultt?._id}`)\n    const updatedData = await response.json()\n    setCustomerInfo(updatedData)\n  }\n  useEffect(() => {\n    getRecordById()\n  }, [updateData, updateStreet, updateLand])\n  return (\n    <>\n      <div className=\"whiteBox\">\n        <div className=\"blueBoxTop\">\n          <div className=\"container-fluid\">\n            <div className=\"row d-flex align-items-center\">\n              <div className=\"col-md-4\">\n                <h3>KlientIn: {`${firstName} ${lastName}`}</h3>\n\n                <address>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"22\"\n                    height=\"22\"\n                    viewBox=\"0 0 22 22\"\n                    fill=\"none\"\n                  >\n                    <g clipPath=\"url(#clip0_207_8532)\">\n                      <path\n                        d=\"M16.817 8.89543C16.817 5.62623 14.1646 2.97386 10.8954 2.97386C7.62623 2.97386 4.97386 5.62623 4.97386 8.89543C4.97386 9.40534 5.15891 10.1949 5.60303 11.2476C6.03481 12.2674 6.64753 13.3942 7.35071 14.5333C8.52269 16.4331 9.87972 18.2671 10.8954 19.5748C11.9153 18.2671 13.2723 16.4331 14.4402 14.5333C15.1433 13.3942 15.7561 12.2674 16.1878 11.2476C16.632 10.1949 16.817 9.40534 16.817 8.89543ZM18.7909 8.89543C18.7909 12.4895 13.9796 18.8881 11.87 21.5281C11.3642 22.1573 10.4266 22.1573 9.92084 21.5281C7.81128 18.8881 3 12.4895 3 8.89543C3 4.5365 6.5365 1 10.8954 1C15.2544 1 18.7909 4.5365 18.7909 8.89543ZM12.2113 8.89543C12.2113 8.54643 12.0727 8.21173 11.8259 7.96495C11.5791 7.71817 11.2444 7.57953 10.8954 7.57953C10.5464 7.57953 10.2117 7.71817 9.96495 7.96495C9.71817 8.21173 9.57953 8.54643 9.57953 8.89543C9.57953 9.24443 9.71817 9.57914 9.96495 9.82592C10.2117 10.0727 10.5464 10.2113 10.8954 10.2113C11.2444 10.2113 11.5791 10.0727 11.8259 9.82592C12.0727 9.57914 12.2113 9.24443 12.2113 8.89543ZM7.60567 8.89543C7.60567 8.02293 7.95227 7.18617 8.56922 6.56922C9.18617 5.95227 10.0229 5.60567 10.8954 5.60567C11.7679 5.60567 12.6047 5.95227 13.2216 6.56922C13.8386 7.18617 14.1852 8.02293 14.1852 8.89543C14.1852 9.76793 13.8386 10.6047 13.2216 11.2216C12.6047 11.8386 11.7679 12.1852 10.8954 12.1852C10.0229 12.1852 9.18617 11.8386 8.56922 11.2216C7.95227 10.6047 7.60567 9.76793 7.60567 8.89543Z\"\n                        fill=\"white\"\n                      />\n                    </g>\n                    <defs>\n                      <clipPath id=\"clip0_207_8532\">\n                        <rect width=\"22\" height=\"22\" fill=\"white\" />\n                      </clipPath>\n                    </defs>\n                  </svg>\n                  <span>{street}</span>\n                </address>\n              </div>\n              <div className=\"col-md-8 text-md-end\">\n                <div style={{ marginBottom: '8px' }}>\n                  {status?.slice(0, 6)?.map((tag, index) => (\n                    <span\n                      key={index}\n                      className=\"dm-badge\"\n                      style={{\n                        background: '#4EB772',\n                        border: 'white',\n                        padding: '3px',\n                        marginRight: '2mm',\n                        fontSize: '13px',\n                      }}\n                    >\n                      <span>{tag.name}</span>\n                    </span>\n                  ))}\n                </div>\n\n                <div className=\"d-flex justify-content-md-end justify-content-between mt-1\">\n                  <button className=\"btn btn me-3 header-button\">\n                    <span style={{ fontSize: '14px', marginRight: '3px', marginLeft: '3px' }}>\n                      {' '}\n                      {formattedDate}\n                    </span>\n                  </button>\n                  <button className=\"btn btn header-button\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"15\"\n                      height=\"15\"\n                      viewBox=\"0 0 18 18\"\n                      fill=\"none\"\n                      style={{ marginRight: '2px', marginRight: '1px', marginBottom: '3px' }}\n                    >\n                      <g clipPath=\"url(#clip0_207_8539)\">\n                        <path\n                          d=\"M14.01 11.0623C13.5295 10.8573 12.9729 10.992 12.6418 11.3963L11.6691 12.5858C10.3214 11.8036 9.19642 10.6786 8.41418 9.33086L9.60073 8.36112C10.005 8.03005 10.1427 7.4734 9.93472 6.99292L8.52844 3.7116C8.30871 3.19596 7.75499 2.90885 7.20712 3.02604L3.9258 3.72918C3.38673 3.84344 3 4.32099 3 4.87471C3 11.6483 8.13293 17.2265 14.7219 17.9268C15.0091 17.9561 15.2962 17.9795 15.5891 17.9912H15.5921C15.7708 17.9971 15.9466 18.0029 16.1253 18.0029C16.679 18.0029 17.1566 17.6162 17.2708 17.0771L17.974 13.7958C18.0912 13.2479 17.804 12.6942 17.2884 12.4745L14.0071 11.0682L14.01 11.0623ZM15.9349 16.5937C9.61538 16.4912 4.50882 11.3846 4.40921 5.06515L7.31552 4.44111L8.57532 7.38258L7.52354 8.24393C6.99032 8.68046 6.85262 9.43927 7.19833 10.0369C8.10363 11.5985 9.40444 12.8993 10.966 13.8046C11.5637 14.1503 12.3225 14.0126 12.759 13.4794L13.6203 12.4276L16.5618 13.6874L15.9349 16.5937Z\"\n                          fill=\"white\"\n                        />\n                      </g>\n                      <defs>\n                        <clipPath id=\"clip0_207_8539\">\n                          <rect width=\"18\" height=\"18\" fill=\"white\" />\n                        </clipPath>\n                      </defs>\n                    </svg>\n                    <span style={{ fontSize: '14px', marginRight: '3px' }}>\n                      {customerInfo?.customer?.phone}\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"whiteBoxWithPdLR\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <nav>\n                  <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                    <button\n                      className={`nav-link ${activeTab === 'customer_info' ? 'active' : ''}`}\n                      id=\"customer_info-tab\"\n                      data-bs-toggle=\"tab\"\n                      role=\"tab\"\n                      aria-selected={activeTab === 'customer_info'}\n                      onClick={(e) => handleTabClick('customer_info', 'KlientInnen', e)}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_91_3542)\">\n                          <path d=\"M12 3.875C14.1549 3.875 16.2215 4.73102 17.7452 6.25476C19.269 7.77849 20.125 9.84512 20.125 12C20.125 14.1549 19.269 16.2215 17.7452 17.7452C16.2215 19.269 14.1549 20.125 12 20.125C9.84512 20.125 7.77849 19.269 6.25476 17.7452C4.73102 16.2215 3.875 14.1549 3.875 12C3.875 9.84512 4.73102 7.77849 6.25476 6.25476C7.77849 4.73102 9.84512 3.875 12 3.875ZM12 22C14.6522 22 17.1957 20.9464 19.0711 19.0711C20.9464 17.1957 22 14.6522 22 12C22 9.34784 20.9464 6.8043 19.0711 4.92893C17.1957 3.05357 14.6522 2 12 2C9.34784 2 6.8043 3.05357 4.92893 4.92893C3.05357 6.8043 2 9.34784 2 12C2 14.6522 3.05357 17.1957 4.92893 19.0711C6.8043 20.9464 9.34784 22 12 22ZM10.4375 15.125C9.91797 15.125 9.5 15.543 9.5 16.0625C9.5 16.582 9.91797 17 10.4375 17H13.5625C14.082 17 14.5 16.582 14.5 16.0625C14.5 15.543 14.082 15.125 13.5625 15.125H13.25V11.6875C13.25 11.168 12.832 10.75 12.3125 10.75H10.4375C9.91797 10.75 9.5 11.168 9.5 11.6875C9.5 12.207 9.91797 12.625 10.4375 12.625H11.375V15.125H10.4375ZM12 9.5C12.3315 9.5 12.6495 9.3683 12.8839 9.13388C13.1183 8.89946 13.25 8.58152 13.25 8.25C13.25 7.91848 13.1183 7.60054 12.8839 7.36612C12.6495 7.1317 12.3315 7 12 7C11.6685 7 11.3505 7.1317 11.1161 7.36612C10.8817 7.60054 10.75 7.91848 10.75 8.25C10.75 8.58152 10.8817 8.89946 11.1161 9.13388C11.3505 9.3683 11.6685 9.5 12 9.5Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_91_3542\">\n                            <rect width=\"24\" height=\"24\" fill=\"white\" />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> KlientInnen </span>\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'contact' ? 'active' : ''}`}\n                      id=\"contact-tab\"\n                      data-bs-toggle=\"tab\"\n                      role=\"tab\"\n                      aria-controls=\"contact\"\n                      aria-selected={activeTab === 'contact'}\n                      onClick={(e) => handleTabClick('contact', 'Kontakte', e)}\n                    >\n                      {' '}\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"19\"\n                        height=\"18\"\n                        viewBox=\"0 0 19 18\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_431_39097)\">\n                          <path d=\"M13.917 3C14.192 3 14.417 3.225 14.417 3.5V15.5C14.417 15.775 14.192 16 13.917 16H4.91699C4.64199 16 4.41699 15.775 4.41699 15.5V3.5C4.41699 3.225 4.64199 3 4.91699 3H13.917ZM4.91699 1.5C3.81387 1.5 2.91699 2.39688 2.91699 3.5V15.5C2.91699 16.6031 3.81387 17.5 4.91699 17.5H13.917C15.0201 17.5 15.917 16.6031 15.917 15.5V3.5C15.917 2.39688 15.0201 1.5 13.917 1.5H4.91699ZM9.41699 9.5C9.94742 9.5 10.4561 9.28929 10.8312 8.91421C11.2063 8.53914 11.417 8.03043 11.417 7.5C11.417 6.96957 11.2063 6.46086 10.8312 6.08579C10.4561 5.71071 9.94742 5.5 9.41699 5.5C8.88656 5.5 8.37785 5.71071 8.00278 6.08579C7.62771 6.46086 7.41699 6.96957 7.41699 7.5C7.41699 8.03043 7.62771 8.53914 8.00278 8.91421C8.37785 9.28929 8.88656 9.5 9.41699 9.5ZM8.41699 10.5C7.03574 10.5 5.91699 11.6188 5.91699 13C5.91699 13.275 6.14199 13.5 6.41699 13.5H12.417C12.692 13.5 12.917 13.275 12.917 13C12.917 11.6188 11.7982 10.5 10.417 10.5H8.41699ZM17.917 4C17.917 3.725 17.692 3.5 17.417 3.5C17.142 3.5 16.917 3.725 16.917 4V6C16.917 6.275 17.142 6.5 17.417 6.5C17.692 6.5 17.917 6.275 17.917 6V4ZM17.417 7.5C17.142 7.5 16.917 7.725 16.917 8V10C16.917 10.275 17.142 10.5 17.417 10.5C17.692 10.5 17.917 10.275 17.917 10V8C17.917 7.725 17.692 7.5 17.417 7.5ZM17.917 12C17.917 11.725 17.692 11.5 17.417 11.5C17.142 11.5 16.917 11.725 16.917 12V14C16.917 14.275 17.142 14.5 17.417 14.5C17.692 14.5 17.917 14.275 17.917 14V12Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_431_39097\">\n                            <rect\n                              width=\"18\"\n                              height=\"18\"\n                              fill=\"white\"\n                              transform=\"translate(0.666992)\"\n                            />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> Kontakte</span>\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'activity' ? 'active' : ''}`}\n                      id=\"activity-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#activity\"\n                      role=\"tab\"\n                      aria-controls=\"activity\"\n                      aria-selected={activeTab === 'activity'}\n                      onClick={(e) => handleTabClick('activity', 'Aktivität', e)}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"19\"\n                        height=\"18\"\n                        viewBox=\"0 0 19 18\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_207_8581)\">\n                          <path d=\"M9.48594 3.00021C9.74609 2.99317 9.97813 3.16661 10.0438 3.41974L11.9023 10.5424L12.5375 9.19005C12.7531 8.73067 13.2172 8.43536 13.7258 8.43536H16.4375C16.7492 8.43536 17 8.68614 17 8.99786C17 9.30958 16.7492 9.56036 16.4375 9.56036H13.7258C13.6531 9.56036 13.5875 9.60255 13.557 9.66817L12.2586 12.4268C12.1578 12.64 11.9328 12.769 11.6984 12.7479C11.4641 12.7268 11.2648 12.558 11.2062 12.3307L9.56328 6.03302L7.80078 14.5525C7.74922 14.808 7.52891 14.9932 7.26875 15.0002C7.00859 15.0072 6.77656 14.8385 6.70859 14.5877L5.35859 9.70099C5.33516 9.61896 5.2625 9.56271 5.17813 9.56271H2.5625C2.25078 9.56271 2 9.31192 2 9.00021C2 8.68849 2.25078 8.43771 2.5625 8.43771H5.17813C5.76875 8.43771 6.28672 8.83146 6.44375 9.40099L7.17031 12.0401L8.94922 3.44786C9.00313 3.19239 9.22344 3.00724 9.48594 3.00021Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_207_8581\">\n                            <rect width=\"18\" height=\"18\" fill=\"white\" transform=\"translate(0.5)\" />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> Aktivität</span>\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'document' ? 'active' : ''}`}\n                      id=\"document-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#document\"\n                      role=\"tab\"\n                      aria-controls=\"document\"\n                      aria-selected={activeTab === 'document'}\n                      onClick={(e) => handleTabClick('document', 'Dokumente', e)}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"19\"\n                        height=\"18\"\n                        viewBox=\"0 0 19 18\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_207_8589)\">\n                          <path d=\"M13.125 15.0938C13.3828 15.0938 13.5938 14.8828 13.5938 14.625V6.1875H11.25C10.7314 6.1875 10.3125 5.76855 10.3125 5.25V2.90625H5.625C5.36719 2.90625 5.15625 3.11719 5.15625 3.375V14.625C5.15625 14.8828 5.36719 15.0938 5.625 15.0938H13.125ZM3.75 3.375C3.75 2.34082 4.59082 1.5 5.625 1.5H10.4736C10.9717 1.5 11.4492 1.69629 11.8008 2.04785L14.4521 4.69922C14.8037 5.05078 15 5.52832 15 6.02637V14.625C15 15.6592 14.1592 16.5 13.125 16.5H5.625C4.59082 16.5 3.75 15.6592 3.75 14.625V3.375Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_207_8589\">\n                            <rect width=\"18\" height=\"18\" fill=\"white\" transform=\"translate(0.75)\" />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> Dokumente</span>\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'attorney' ? 'active' : ''}`}\n                      id=\"attorney-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#attorney\"\n                      role=\"tab\"\n                      aria-controls=\"attorney\"\n                      aria-selected={activeTab === 'attorney'}\n                      onClick={(e) => handleTabClick('attorney', 'Vollmachten', e)}\n                    >\n                      <i className=\"fa-solid fa-paint-roller fa-fw\"></i>\n                      &nbsp; Vollmachten\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'services' ? 'active' : ''}`}\n                      id=\"services-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#services\"\n                      role=\"tab\"\n                      aria-controls=\"services\"\n                      aria-selected={activeTab === 'services'}\n                      onClick={(e) => handleTabClick('services', 'HVD-PV', e)}\n                    >\n                      {' '}\n                      <i className=\"fa-regular fa-lightbulb fa-fw\"></i>\n                      &nbsp; HVD-PV\n                    </button>\n                    <button\n                      className={`nav-link ${activeTab === 'bills' ? 'active' : ''}`}\n                      id=\"bills-tab\"\n                      data-bs-toggle=\"tab\"\n                      data-bs-target=\"#bills\"\n                      role=\"tab\"\n                      aria-controls=\"bills\"\n                      aria-selected={activeTab === 'bills'}\n                      onClick={(e) => handleTabClick('bills', 'Rechnung', e)}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"19\"\n                        height=\"18\"\n                        viewBox=\"0 0 19 18\"\n                        fill=\"none\"\n                      >\n                        <g clipPath=\"url(#clip0_207_8565)\">\n                          <path d=\"M5.125 15.0938H12.625C12.8828 15.0938 13.0938 14.8828 13.0938 14.625V6.1875H10.75C10.2314 6.1875 9.8125 5.76855 9.8125 5.25V2.90625H5.125C4.86719 2.90625 4.65625 3.11719 4.65625 3.375V14.625C4.65625 14.8828 4.86719 15.0938 5.125 15.0938ZM3.25 3.375C3.25 2.34082 4.09082 1.5 5.125 1.5H9.97363C10.4717 1.5 10.9492 1.69629 11.3008 2.04785L13.9521 4.69922C14.3037 5.05078 14.5 5.52832 14.5 6.02637V14.625C14.5 15.6592 13.6592 16.5 12.625 16.5H5.125C4.09082 16.5 3.25 15.6592 3.25 14.625V3.375ZM5.59375 4.78125C5.59375 4.52344 5.80469 4.3125 6.0625 4.3125H8.40625C8.66406 4.3125 8.875 4.52344 8.875 4.78125C8.875 5.03906 8.66406 5.25 8.40625 5.25H6.0625C5.80469 5.25 5.59375 5.03906 5.59375 4.78125ZM5.59375 6.65625C5.59375 6.39844 5.80469 6.1875 6.0625 6.1875H8.40625C8.66406 6.1875 8.875 6.39844 8.875 6.65625C8.875 6.91406 8.66406 7.125 8.40625 7.125H6.0625C5.80469 7.125 5.59375 6.91406 5.59375 6.65625ZM8.875 13.2188C8.875 12.9609 9.08594 12.75 9.34375 12.75H11.6875C11.9453 12.75 12.1562 12.9609 12.1562 13.2188C12.1562 13.4766 11.9453 13.6875 11.6875 13.6875H9.34375C9.08594 13.6875 8.875 13.4766 8.875 13.2188ZM6.53125 8.0625H11.2188C11.7373 8.0625 12.1562 8.48145 12.1562 9V10.875C12.1562 11.3936 11.7373 11.8125 11.2188 11.8125H6.53125C6.0127 11.8125 5.59375 11.3936 5.59375 10.875V9C5.59375 8.48145 6.0127 8.0625 6.53125 8.0625Z\" />\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_207_8565\">\n                            <rect width=\"18\" height=\"18\" fill=\"white\" transform=\"translate(0.25)\" />\n                          </clipPath>\n                        </defs>\n                      </svg>\n                      <span> Rechnung </span>\n                    </button>\n                  </div>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(Customer)\n","// import React, { useState, useEffect } from 'react'\n// import PropTypes from 'prop-types'\n\n// export default function DatePicker({ onChange, value, placeholder }) {\n//   const [inputValue, setInputValue] = useState('')\n\n//   useEffect(() => {\n//     if (typeof value === 'string') {\n//       const parsedDate = new Date(value)\n//       if (!isNaN(parsedDate.getTime())) {\n//         setInputValue(formatDate(parsedDate))\n//       } else {\n//         setInputValue('')\n//       }\n//     } else if (value instanceof Date && !isNaN(value.getTime())) {\n//       setInputValue(formatDate(value))\n//     } else {\n//       setInputValue('')\n//     }\n//   }, [value])\n\n//   // const handleInputChange = (e) => {\n//   //   let inputValue = e.target?.value\n//   //   let formattedValue = ''\n\n//   //   inputValue = inputValue?.replace(/\\D/g, '')\n\n//   //   for (let i = 0; i < inputValue?.length; i++) {\n//   //     if (i === 2 || i === 4) {\n//   //       formattedValue += '.'\n//   //     }\n//   //     formattedValue += inputValue[i]\n//   //   }\n\n//   //   setInputValue(formattedValue)\n//   // }\n//   const handleInputChange = (e) => {\n//     let inputValue = e.target?.value\n//     let formattedValue = ''\n\n//     inputValue = inputValue?.replace(/\\D/g, '')\n\n//     if (inputValue?.length > 8) {\n//       inputValue = inputValue.slice(0, 8)\n//     }\n\n//     for (let i = 0; i < inputValue?.length; i++) {\n//       if (i === 2 || i === 4) {\n//         formattedValue += '.'\n//       }\n//       formattedValue += inputValue[i]\n//     }\n\n//     setInputValue(formattedValue)\n//   }\n\n//   const handleDateChange = (e) => {\n//     const parts = inputValue?.split('.')?.map((part) => parseInt(part, 10))\n//     let [day, month, year] = parts\n//     if (parts?.length === 3) {\n//       if (year < 100) {\n//         year += 1900\n//       } else if (year >= 2000 && year <= new Date().getFullYear()) {\n//       } else {\n//         year = year\n//       }\n\n//       const newDate = new Date(year, month - 1, day)\n//       onChange(newDate)\n//     } else if (parts?.length === 1) {\n//       const year = parts[0]\n//       if (year < 100) {\n//         let fullYear\n//         if (year < 50) {\n//           fullYear = year + 2000\n//         } else {\n//           fullYear = year + 1900\n//         }\n//         const newDate = new Date(fullYear, 0, 1)\n//         onChange(newDate)\n//       }\n//     }\n//   }\n\n//   const formatDate = (date) => {\n//     const day = date?.getDate()?.toString()?.padStart(2, '0')\n//     const month = (date?.getMonth() + 1)?.toString()?.padStart(2, '0')\n//     const year = date?.getFullYear()?.toString()\n//     return `${day}.${month}.${year}`\n//   }\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         onChange={handleInputChange}\n//         onBlur={handleDateChange}\n//         value={inputValue}\n//         placeholder={placeholder}\n//         className=\"form-control\"\n//       />\n//     </div>\n//   )\n// }\n\n// DatePicker.propTypes = {\n//   onChange: PropTypes.func.isRequired,\n//   value: PropTypes.instanceOf(Date).isRequired,\n//   placeholder: PropTypes.string.isRequired,\n// }\n\nimport React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function DatePicker({ onChange, value, placeholder, className, disabled }) {\n  const [inputValue, setInputValue] = useState('')\n\n  useEffect(() => {\n    if (typeof value === 'string') {\n      const parsedDate = new Date(value)\n      if (!isNaN(parsedDate.getTime())) {\n        setInputValue(formatDate(parsedDate))\n      } else {\n        setInputValue('')\n      }\n    } else if (value instanceof Date && !isNaN(value.getTime())) {\n      setInputValue(formatDate(value))\n    } else {\n      setInputValue('')\n    }\n  }, [value])\n\n  const handleInputChange = (e) => {\n    let inputValue = e.target?.value\n    let formattedValue = ''\n\n    inputValue = inputValue?.replace(/\\D/g, '')\n\n    if (inputValue?.length > 8) {\n      inputValue = inputValue.slice(0, 8)\n    }\n\n    for (let i = 0; i < inputValue?.length; i++) {\n      if (i === 2 || i === 4) {\n        formattedValue += '.'\n      }\n      formattedValue += inputValue[i]\n    }\n\n    setInputValue(formattedValue)\n  }\n\n  const handleDateChange = (e) => {\n    const parts = inputValue?.split('.')?.map((part) => parseInt(part, 10))\n    let [day, month, year] = parts\n\n    if (parts?.length === 3) {\n      if (year < 100) {\n        year += 1900\n      }\n\n      if (month < 1) month = 1\n      if (month > 12) month = 12\n\n      const maxDays = new Date(year, month, 0).getDate()\n      if (day < 1) day = 1\n      if (day > maxDays) day = maxDays\n\n      const newDate = new Date(year, month - 1, day)\n      onChange(newDate)\n    } else if (parts?.length === 1) {\n      const year = parts[0]\n      if (year < 100) {\n        let fullYear\n        if (year < 50) {\n          fullYear = year + 2000\n        } else {\n          fullYear = year + 1900\n        }\n        const newDate = new Date(fullYear, 0, 1)\n        onChange(newDate)\n      }\n    }\n  }\n\n  const formatDate = (date) => {\n    const day = date?.getDate()?.toString()?.padStart(2, '0')\n    const month = (date?.getMonth() + 1)?.toString()?.padStart(2, '0')\n    const year = date?.getFullYear()?.toString()\n    return `${day}.${month}.${year}`\n  }\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        onChange={handleInputChange}\n        onBlur={handleDateChange}\n        value={inputValue}\n        placeholder={placeholder}\n        className={className}\n        disabled={disabled}\n      />\n    </div>\n  )\n}\n\nDatePicker.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.instanceOf(Date).isRequired,\n  placeholder: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  disabled: PropTypes.string.isRequired,\n}\n","import React, { useEffect, useState } from 'react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Customer from '../Customer'\nimport { useNavigate } from 'react-router-dom'\nimport DatePic from '../Date'\nimport 'react-phone-input-2/lib/style.css'\nimport DatePicker from '../Date'\n\nconst Attorney = () => {\n  const [date, setDate] = useState()\n  const [recordData, setRecordData] = useState([])\n  const navigate = useNavigate()\n  const maxFields = 10\n  const initialFields = 4\n  const apiUrl = process.env.REACT_APP_API_URL\n  const cancelData = () => {\n    localStorage.removeItem('tabId')\n    navigate('/customer/customer_info')\n  }\n\n  const [powerOfAttorney, setPowerOfAttorney] = useState({\n    AttorneyMasterData: false,\n    adoptDataFromHealthcare: Boolean(recordData?.powerOfAttorney?.adoptDataFromHealthcare),\n    powerOfAttorneyData: Array.from({ length: initialFields }, () => ({\n      powerOfAttorney_fname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_fname\n      }),\n      powerOfAttorney_lname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_lname\n      }),\n      powerOfAttorney_address: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_address\n      }),\n      powerOfAttorney_mobile: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_mobile\n      }),\n      powerOfAttorney_phone: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_phone\n      }),\n    })),\n  })\n\n  const [careProvision, setCareProvision] = useState({\n    care_association: recordData?.careProvision?.care_association || '',\n  })\n\n  const [securingattorney, setSecuringattorney] = useState({\n    fname: recordData?.securingattorney?.fname,\n    lname: recordData?.securingattorney?.lname,\n    address: recordData?.securingattorney?.address,\n    dob: recordData?.securingattorney?.dob ? new Date(recordData.securingattorney.dob) : null,\n    plz: recordData?.securingattorney?.plz,\n    ort: recordData?.securingattorney?.ort,\n  })\n\n  // const healthCareChange = (e, index, fieldName) => {\n  //   let value\n\n  //   if (e && e.target) {\n  //     value = e.target.value\n  //   } else {\n  //     value = e\n  //   }\n\n  //   setHealthCare((prevHealthCare) => {\n  //     const updatedHealthCareData = [...prevHealthCare.healthCareData]\n\n  //     updatedHealthCareData[index] = {\n  //       ...updatedHealthCareData[index],\n  //       [fieldName]: value,\n  //     }\n\n  //     return { ...prevHealthCare, healthCareData: updatedHealthCareData }\n  //   })\n  // }\n\n  const healthCareChange = (e, index) => {\n    const { name, value, type, checked } = e.target || {}\n    setHealthCare((prevHealthCare) => {\n      const updatedHealthCareData = [...prevHealthCare.healthCareData]\n\n      if (type === 'checkbox') {\n        updatedHealthCareData[index] = {\n          ...updatedHealthCareData[index],\n          [name]: checked,\n        }\n      } else if (name === 'healthCare_phone') {\n        const inputValue = value.replace(/[^\\d+ ]/g, '')\n        if (/^\\+?(?:[0-9] ?){0,}$/.test(inputValue)) {\n          updatedHealthCareData[index] = {\n            ...updatedHealthCareData[index],\n            healthCare_phone: inputValue,\n          }\n        }\n      } else if (name === 'healthCare_mobile') {\n        const inputValue = value.replace(/[^\\d+ ]/g, '')\n        if (/^\\+?(?:[0-9] ?){0,}$/.test(inputValue)) {\n          updatedHealthCareData[index] = {\n            ...updatedHealthCareData[index],\n            healthCare_mobile: inputValue,\n          }\n        }\n      } else {\n        // For other fields, simply update the value\n        updatedHealthCareData[index] = {\n          ...updatedHealthCareData[index],\n          [name]: value,\n        }\n      }\n      return { ...prevHealthCare, healthCareData: updatedHealthCareData }\n    })\n  }\n\n  // const healthCareChange = (phoneNumber, index) => {\n  //   setHealthCare((prevHealthCare) => {\n  //     const updatedHealthCareData = [...prevHealthCare.healthCareData]\n  //     updatedHealthCareData[index] = {\n  //       ...updatedHealthCareData[index],\n  //       healthCare_phone: phoneNumber,\n  //       healthCare_mobile: phoneNumber,\n  //     }\n\n  //     return { ...prevHealthCare, healthCareData: updatedHealthCareData }\n  //   })\n  // }\n\n  const [healthCare, setHealthCare] = useState({\n    healthCareData: Array.from({ length: initialFields }, () => ({\n      healthCare_fname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_fname\n      }),\n      healthCare_lname: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_lname\n      }),\n      healthCare_address: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_address\n      }),\n      healthCare_mobile: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_mobile\n      }),\n      healthCare_phone: recordData?.healthCare?.healthCareData?.map((item) => {\n        return item.healthCare_phone\n      }),\n    })),\n  })\n  // console.log('first', healthCare.healthCareData[0].healthCare_fname)\n\n  const addHealthCareField = () => {\n    if (healthCare.healthCareData.length < maxFields) {\n      setHealthCare((prev) => ({\n        ...prev,\n        healthCareData: [\n          ...prev.healthCareData,\n          {\n            healthCare_fname: '',\n            healthCare_lname: '',\n            healthCare_address: '',\n            healthCare_phone: [],\n          },\n        ],\n      }))\n    }\n  }\n\n  const powerOfAttorneyChange = (e, index) => {\n    const { name, value, type, checked } = e.target || {}\n    setPowerOfAttorney((prevPowerOfAttorney) => {\n      const updatedPowerOfAttorneyData = [...prevPowerOfAttorney.powerOfAttorneyData]\n\n      if (type === 'checkbox') {\n        updatedPowerOfAttorneyData[index] = {\n          ...updatedPowerOfAttorneyData[index],\n          [name]: checked,\n        }\n      } else if (name === 'powerOfAttorney_phone') {\n        const inputValue = value.replace(/[^\\d+ ]/g, '')\n        if (/^\\+?(?:[0-9] ?){0,}$/.test(inputValue)) {\n          updatedPowerOfAttorneyData[index] = {\n            ...updatedPowerOfAttorneyData[index],\n            powerOfAttorney_phone: inputValue,\n          }\n        }\n      } else if (name === 'powerOfAttorney_mobile') {\n        const inputValue = value.replace(/[^\\d+ ]/g, '')\n        if (/^\\+?(?:[0-9] ?){0,}$/.test(inputValue)) {\n          updatedPowerOfAttorneyData[index] = {\n            ...updatedPowerOfAttorneyData[index],\n            powerOfAttorney_mobile: inputValue,\n          }\n        }\n      }\n\n      return { ...prevPowerOfAttorney, powerOfAttorneyData: updatedPowerOfAttorneyData }\n    })\n  }\n\n  const addPowerOfAttorneyField = () => {\n    if (powerOfAttorney.powerOfAttorneyData.length < maxFields) {\n      setPowerOfAttorney((prev) => ({\n        ...prev,\n        powerOfAttorneyData: [\n          ...prev.powerOfAttorneyData,\n          {\n            powerOfAttorney_fname: '',\n            powerOfAttorney_lname: '',\n            powerOfAttorney_address: '',\n            powerOfAttorney_phone: [],\n            powerOfAttorney_mobile: [],\n          },\n        ],\n      }))\n    }\n  }\n\n  const careProvisionChange = (e) => {\n    const { name, value } = e.target\n\n    setCareProvision({ ...careProvision, [name]: value })\n  }\n  const securingattorneyChange = (e) => {\n    if (e instanceof Date) {\n      setSecuringattorney({ ...securingattorney, dob: e })\n    } else if (e.target) {\n      const { name, value, type, checked } = e.target\n\n      if (name === 'plz' && type === 'text') {\n        const inputValue = value.replace(/[^0-9a-zA-Z9äöüÄÖÜßÄÖÜß\\s'-]/g, '')\n        setSecuringattorney({ ...securingattorney, plz: inputValue })\n      } else {\n        setSecuringattorney({ ...securingattorney, [name]: type === 'checkbox' ? checked : value })\n      }\n    } else if (e.value !== undefined) {\n      setSecuringattorney({ ...securingattorney, salution: e.value })\n    } else {\n      console.error('Invalid event or data provided to securingattorneyChange.')\n    }\n  }\n\n  const handleBlur = (event) => {\n    const { name, value } = event.target\n    let formattedAddress = value.trim()\n    const endsWithNumber = /\\d$/.test(value)\n\n    if (endsWithNumber) {\n      formattedAddress = value.replace(/(\\D)(\\d)/, '$1 $2')\n    }\n\n    setSecuringattorney({\n      ...securingattorney,\n      [name]: formattedAddress,\n    })\n  }\n\n  let res = localStorage.getItem('customerRecord')\n  let resultt = JSON.parse(res)\n  const data = {\n    healthCare,\n    powerOfAttorney,\n    careProvision,\n    securingattorney,\n    customer_id: resultt?._id,\n  }\n  const saveData = async () => {\n    const healthCareData = data.healthCare.healthCareData\n\n    // Phone and mobile number validation\n    const phoneRegex = '000'\n    for (const record of healthCareData) {\n      if (record.healthCare_phone && record.healthCare_phone.startsWith(phoneRegex)) {\n        return toast.warning('Ungültige Telefonnummer')\n      }\n      if (record.healthCare_mobile && record.healthCare_mobile.startsWith(phoneRegex)) {\n        return toast.warning('Ungültige Mobilnummer')\n      }\n    }\n    let currentDate = new Date()\n    let secureDate = securingattorney?.dob\n    if (securingattorney?.dob) {\n      const birthYear = new Date(securingattorney?.dob)?.getFullYear()\n      if (birthYear < 1900) {\n        return toast.warning('Das Geburtsdatum darf nicht vor 1900 liegen')\n      }\n    }\n    if (securingattorney && securingattorney.dob) {\n      let attorneyDOB = new Date(securingattorney.dob)\n\n      if (attorneyDOB > currentDate) {\n        return toast.warning('Das Geburtsdatum darf nicht in der Zukunft liegen')\n      }\n    }\n    let birthDate = new Date(secureDate)\n    let minimumAge = 18\n    let ageDifferenceMilliseconds = currentDate.getTime() - birthDate.getTime()\n    let ageDifferenceYears = ageDifferenceMilliseconds / (1000 * 3600 * 24 * 365.25)\n\n    if (ageDifferenceYears < minimumAge) {\n      return toast.warning(\n        'Du musst mindestens 18 Jahre alt sein, um einen Vertrag zu unterschreiben.',\n      )\n    }\n\n    try {\n      let url\n      let method\n\n      if (resultt) {\n        url = `${apiUrl}/attorney/get_attorney/${resultt._id}`\n        method = 'PUT'\n      } else {\n        url = `${apiUrl}/attorney`\n        method = 'POST'\n      }\n      let response = await fetch(url, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n      let result = await response.json()\n      if (result.status === 201) {\n        toast.success('Daten erfolgreich gespeichert')\n      } else {\n        toast.error(\n          'Fehler beim Speichern der Daten. Weitere Informationen finden Sie auf der Konsole.',\n        )\n      }\n    } catch (error) {\n      toast.error('Error saving data. Please try again.')\n    }\n  }\n\n  const getRecord = async () => {\n    try {\n      const result = await fetch(`${apiUrl}/attorney/get_attorney/${resultt._id}`)\n      const data = await result.json()\n      setRecordData(data)\n    } catch (error) {\n      console.error('Error fetching customer record:', error)\n    }\n  }\n  const toggleAdoptDataFromHealthcare = () => {\n    setPowerOfAttorney((prevState) => ({\n      ...prevState,\n      adoptDataFromHealthcare: !prevState.adoptDataFromHealthcare,\n      powerOfAttorneyData: prevState.adoptDataFromHealthcare\n        ? powerOfAttorney.powerOfAttorneyData.map((data) => ({\n            powerOfAttorney_fname: '',\n            powerOfAttorney_lname: '',\n            powerOfAttorney_address: '',\n            powerOfAttorney_phone: '',\n            powerOfAttorney_mobile: '',\n          }))\n        : healthCare.healthCareData.map((data) => ({\n            powerOfAttorney_fname: data.healthCare_fname,\n            powerOfAttorney_lname: data.healthCare_lname,\n            powerOfAttorney_address: data.healthCare_address,\n            powerOfAttorney_phone: data.healthCare_phone,\n            powerOfAttorney_mobile: data.healthCare_mobile,\n          })),\n    }))\n  }\n\n  useEffect(() => {\n    setCareProvision({\n      care_association: recordData?.careProvision?.care_association,\n    })\n    setSecuringattorney({\n      fname: recordData?.securingattorney?.fname,\n      lname: recordData?.securingattorney?.lname,\n      address: recordData?.securingattorney?.address,\n      dob: recordData?.securingattorney?.dob,\n      plz: recordData?.securingattorney?.plz,\n      ort: recordData?.securingattorney?.ort,\n    })\n    setPowerOfAttorney((prevState) => ({\n      ...prevState,\n      // adoptDataFromHealthcare: Boolean(recordData?.powerOfAttorney?.adoptDataFromHealthcare),\n      powerOfAttorneyData: Array.from({ length: initialFields }, (_, index) => ({\n        powerOfAttorneyData: prevState.powerOfAttorneyData.map((item, index) => ({\n          ...item,\n          powerOfAttorney_fname:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_fname ||\n            item.powerOfAttorney_fname,\n          powerOfAttorney_lname:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_lname ||\n            item.powerOfAttorney_lname,\n          powerOfAttorney_address:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_address ||\n            item.powerOfAttorney_address,\n          powerOfAttorney_mobile:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_mobile ||\n            item.powerOfAttorney_mobile,\n          powerOfAttorney_phone:\n            recordData?.healthCare?.healthCareData?.[index]?.healthCare_phone ||\n            item.powerOfAttorney_phone,\n        })),\n      })),\n    }))\n    setHealthCare((prevHealthCare) => ({\n      ...prevHealthCare,\n      healthCareData: Array.from({ length: initialFields }, (_, index) => ({\n        healthCare_fname:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_fname ||\n          prevHealthCare.healthCareData[index]?.healthCare_fname ||\n          '',\n        healthCare_lname:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_lname ||\n          prevHealthCare.healthCareData[index]?.healthCare_lname ||\n          '',\n        healthCare_address:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_address ||\n          prevHealthCare.healthCareData[index]?.healthCare_address ||\n          '',\n        healthCare_mobile:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_mobile ||\n          prevHealthCare.healthCareData[index]?.healthCare_mobile ||\n          '',\n        healthCare_phone:\n          recordData?.healthCare?.healthCareData?.[index]?.healthCare_phone ||\n          prevHealthCare.healthCareData[index]?.healthCare_phone ||\n          '',\n      })),\n    }))\n  }, [recordData, initialFields])\n\n  useEffect(() => {\n    addHealthCareField()\n    getRecord()\n    addPowerOfAttorneyField()\n  }, [])\n  return (\n    <>\n      <Customer />\n      <div className=\"inner-page-wrap\">\n        <div className=\"tab-content\">\n          <div className=\"tab-title\">\n            <h4>Vollmachten</h4>\n          </div>\n          <div className=\"block-wrap m-3\">\n            <div>\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <h3 style={{ color: '#244D92' }}>Gesundheitsvollmacht</h3>\n                  <p className=\"\" style={{ color: '#244D92' }}>\n                    Bevollmächtigte Person(en):\n                  </p>\n                  <div>\n                    <div className=\"row mb-2\">\n                      <div className=\"col-sm-2\">\n                        <b>Vorname</b>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <b>Nachname</b>\n                      </div>\n                      <div className=\"col-sm-4\">\n                        <b>Adresse</b>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <b>Telefon</b>\n                      </div>\n                      <div className=\"col-sm-2\">\n                        <b>Mobil</b>\n                      </div>\n                    </div>\n                    <div>\n                      {healthCare.healthCareData &&\n                        healthCare.healthCareData.map((field, index) => (\n                          <div className=\"row\" key={index}>\n                            <div className=\"col-sm-2\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    onChange={(e) => healthCareChange(e, index, 'healthCare_fname')}\n                                    value={field.healthCare_fname}\n                                    name=\"healthCare_fname\"\n                                    type=\"text\"\n                                    placeholder=\"Vorname\"\n                                    className=\"form-control z\"\n                                    id={`fname_${index}`}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-2\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    onChange={(e) => healthCareChange(e, index, 'healthCare_lname')}\n                                    value={field.healthCare_lname}\n                                    type=\"text\"\n                                    name=\"healthCare_lname\"\n                                    placeholder=\"Nachname\"\n                                    className=\"form-control\"\n                                    id={`lname_${index}`}\n                                    //required={true}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-4\">\n                              <div className=\" row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    onChange={(e) =>\n                                      healthCareChange(e, index, 'healthCare_address')\n                                    }\n                                    value={field.healthCare_address}\n                                    type=\"text\"\n                                    name=\"healthCare_address\"\n                                    placeholder=\"Adresse\"\n                                    className=\"form-control\"\n                                    id={`address_${index}`}\n                                    //required={true}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-2\">\n                              <div className=\" row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    onChange={(e) => healthCareChange(e, index, 'healthCare_phone')}\n                                    value={field.healthCare_phone}\n                                    name=\"healthCare_phone\"\n                                    placeholder=\"853-456-8464\"\n                                    className=\"form-control\"\n                                    id={`phone_${index}`}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-2\">\n                              <div className=\" row\">\n                                <div className=\"col-sm-12\">\n                                  <input\n                                    onChange={(e) =>\n                                      healthCareChange(e, index, 'healthCare_mobile')\n                                    }\n                                    value={field.healthCare_mobile}\n                                    type=\"text\"\n                                    name=\"healthCare_mobile\"\n                                    placeholder=\"853-456-8464\"\n                                    className=\"form-control\"\n                                    id={`phone_${index}`}\n                                    maxLength={20}\n                                    minLength={3}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <hr />\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <h3 style={{ color: '#244D92' }}>Vorsorgevollmacht</h3>\n                  <div className=\"row\">\n                    <label htmlFor=\"adoptDataFromHealthcare\" className=\"col-sm-3 col-form-label\">\n                      Daten aus Gesundheitsvollmacht übernehmen\n                    </label>\n                    <div className=\"col-sm-1 radio-check-wrap mt-2\">\n                      <input\n                        type=\"checkbox\"\n                        onChange={toggleAdoptDataFromHealthcare}\n                        checked={powerOfAttorney.adoptDataFromHealthcare}\n                        name=\"adoptDataFromHealthcare\"\n                      />\n                      <span></span>\n                    </div>\n                  </div>\n                  <p className=\"\" style={{ color: '#244D92' }}>\n                    Bevollmächtigte Person(en):\n                  </p>\n\n                  <div className=\"row mb-2 mt-3\">\n                    <div className=\"col-sm-2\">\n                      <b>Vorname</b>\n                    </div>\n                    <div className=\"col-sm-2\">\n                      <b>Nachname</b>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <b>Adresse</b>\n                    </div>\n                    <div className=\"col-sm-2\">\n                      <b>Telefon</b>\n                    </div>\n                    <div className=\"col-sm-2\">\n                      <b>Mobil</b>\n                    </div>\n                  </div>\n                  {powerOfAttorney.powerOfAttorneyData &&\n                    powerOfAttorney.powerOfAttorneyData.map((field, index) => (\n                      <div className=\"row\" key={index}>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_fname}\n                                name=\"powerOfAttorney_fname\"\n                                type=\"text\"\n                                placeholder=\"Vorname\"\n                                className=\"form-control\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_lname}\n                                name=\"powerOfAttorney_lname\"\n                                type=\"text\"\n                                placeholder=\"Nachname\"\n                                className=\"form-control\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-4\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_address}\n                                name=\"powerOfAttorney_address\"\n                                type=\"text\"\n                                placeholder=\"Adresse\"\n                                className=\"form-control\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_phone}\n                                name=\"powerOfAttorney_phone\"\n                                type=\"text\"\n                                placeholder=\"853-456-8464\"\n                                className=\"form-control\"\n                                maxLength={20}\n                                minLength={3}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-sm-2\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <input\n                                onChange={(e) => powerOfAttorneyChange(e, index)}\n                                value={field.powerOfAttorney_mobile}\n                                name=\"powerOfAttorney_mobile\"\n                                type=\"text\"\n                                placeholder=\"853-456-8464\"\n                                className=\"form-control\"\n                                maxLength={20}\n                                minLength={3}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            </div>\n            <hr />\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <h3 style={{ color: '#244D92' }}>Betreuungsverfügung</h3>\n\n                <div className=\"row\">\n                  <label className=\"col-sm-2 col-form-label\">Betreuungsverein</label>\n                  <div className=\"col-sm-10\">\n                    <textarea\n                      value={careProvision.care_association}\n                      name=\"care_association\"\n                      onChange={careProvisionChange}\n                      className=\"form-control\"\n                      placeholder=\"Betreuungsverein\"\n                    />\n                  </div>\n                </div>\n                <hr />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <h3 style={{ color: '#244D92' }}>Vollmacht zur Absicherung des digitalen Erbes</h3>\n\n                <div className=\"row mb-2 mt-3\">\n                  <div className=\"col-sm-2\">\n                    <b>Vorname</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Nachname</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Geburtsdatum</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Straße mit Hausnummer</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>PLZ</b>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <b>Ort</b>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"fname\"\n                          value={securingattorney.fname}\n                          type=\"text\"\n                          placeholder=\"Vorname\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"lname\"\n                          value={securingattorney.lname}\n                          type=\"text\"\n                          placeholder=\"Nachname\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <DatePic\n                          value={securingattorney.dob}\n                          onChange={securingattorneyChange}\n                          name=\"dob\"\n                          placeholder=\"Geburtsdatum\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onBlur={handleBlur}\n                          onChange={securingattorneyChange}\n                          value={securingattorney.address}\n                          name=\"address\"\n                          type=\"text\"\n                          placeholder=\"Straße mit Hausnummer\"\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"plz\"\n                          value={securingattorney.plz}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"PLZ\"\n                          maxLength={10}\n                          minLength={3}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-2\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <input\n                          onChange={securingattorneyChange}\n                          name=\"ort\"\n                          value={securingattorney.ort}\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Ort\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <hr />\n            <div className=\"text-end mx-3\">\n              <button\n                onClick={cancelData}\n                type=\"button\"\n                className=\"btn btn\"\n                style={{ background: '#d04545', color: 'white' }}\n              >\n                Abbrechen\n              </button>\n              &nbsp; &nbsp;\n              <button\n                onClick={saveData}\n                type=\"button\"\n                style={{ background: '#0b5995', color: 'white' }}\n                className=\"btn btn\"\n              >\n                Speichern\n              </button>\n            </div>\n          </div>\n        </div>\n        <ToastContainer />\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(Attorney)\n"],"names":["Customer","_ref","_customerInfo$custome","_customerInfo$custome2","_customerInfo$custome3","_customerInfo$custome4","_customerInfo$custome5","_customerInfo$custome6","_customerInfo$custome7","_customerInfo$custome8","_customerInfo$custome9","_customerInfo$custome10","_customerInfo$custome11","_customerInfo$custome12","_customerInfo$custome13","_status$slice","_customerInfo$custome14","getCustomerData","updateData","updateStreet","updateLand","customerInfo","setCustomerInfo","useState","ress","localStorage","getItem","resultt","JSON","parse","navigate","useNavigate","activeTab","handleTabClick","tabId","name","e","target","tagName","toLowerCase","preventDefault","setItem","useEffect","console","log","customer","dateString","startDate","formattedDate","Date","toLocaleDateString","year","month","day","replace","firstName","fname","lastName","lname","slice","toUpperCase","street","length","plz","ort","status","async","response","fetch","concat","process","_id","updatedData","json","getRecordById","_jsx","_Fragment","children","_jsxs","className","xmlns","width","height","viewBox","fill","clipPath","d","id","style","marginBottom","map","tag","index","background","border","padding","marginRight","fontSize","marginLeft","phone","role","onClick","transform","React","DatePicker","onChange","value","placeholder","disabled","inputValue","setInputValue","parsedDate","isNaN","getTime","formatDate","date","_date$getDate","_date$getDate$toStrin","_ref2","_ref2$toString","_date$getFullYear","getDate","toString","padStart","getMonth","getFullYear","type","_e$target","_inputValue","_inputValue2","formattedValue","i","_inputValue3","onBlur","_inputValue$split","parts","split","part","parseInt","maxDays","newDate","fullYear","Attorney","_recordData$powerOfAt","_recordData$careProvi","_recordData$securinga","_recordData$securinga2","_recordData$securinga3","_recordData$securinga4","_recordData$securinga5","_recordData$securinga6","setDate","recordData","setRecordData","apiUrl","powerOfAttorney","setPowerOfAttorney","AttorneyMasterData","adoptDataFromHealthcare","Boolean","powerOfAttorneyData","Array","from","_recordData$healthCar","_recordData$healthCar2","_recordData$healthCar3","_recordData$healthCar4","_recordData$healthCar5","_recordData$healthCar6","_recordData$healthCar7","_recordData$healthCar8","_recordData$healthCar9","_recordData$healthCar10","powerOfAttorney_fname","healthCare","healthCareData","item","healthCare_fname","powerOfAttorney_lname","healthCare_lname","powerOfAttorney_address","healthCare_address","powerOfAttorney_mobile","healthCare_mobile","powerOfAttorney_phone","healthCare_phone","careProvision","setCareProvision","care_association","securingattorney","setSecuringattorney","address","dob","healthCareChange","checked","setHealthCare","prevHealthCare","updatedHealthCareData","test","_recordData$healthCar11","_recordData$healthCar12","_recordData$healthCar13","_recordData$healthCar14","_recordData$healthCar15","_recordData$healthCar16","_recordData$healthCar17","_recordData$healthCar18","_recordData$healthCar19","_recordData$healthCar20","powerOfAttorneyChange","prevPowerOfAttorney","updatedPowerOfAttorneyData","securingattorneyChange","undefined","salution","error","res","data","customer_id","_recordData$careProvi2","_recordData$securinga7","_recordData$securinga8","_recordData$securinga9","_recordData$securinga10","_recordData$securinga11","_recordData$securinga12","prevState","_","_recordData$healthCar21","_recordData$healthCar22","_recordData$healthCar23","_recordData$healthCar24","_recordData$healthCar25","_recordData$healthCar26","_recordData$healthCar27","_recordData$healthCar28","_recordData$healthCar29","_recordData$healthCar30","_recordData$healthCar31","_recordData$healthCar32","_recordData$healthCar33","_recordData$healthCar34","_recordData$healthCar35","_recordData$healthCar36","_recordData$healthCar37","_recordData$healthCar38","_prevHealthCare$healt","_recordData$healthCar39","_recordData$healthCar40","_recordData$healthCar41","_prevHealthCare$healt2","_recordData$healthCar42","_recordData$healthCar43","_recordData$healthCar44","_prevHealthCare$healt3","_recordData$healthCar45","_recordData$healthCar46","_recordData$healthCar47","_prevHealthCare$healt4","_recordData$healthCar48","_recordData$healthCar49","_recordData$healthCar50","_prevHealthCare$healt5","prev","result","getRecord","color","field","maxLength","minLength","htmlFor","toggleAdoptDataFromHealthcare","DatePic","event","formattedAddress","trim","cancelData","removeItem","record","startsWith","toast","warning","currentDate","secureDate","_Date","birthDate","url","method","headers","body","stringify","success","ToastContainer"],"sourceRoot":""}